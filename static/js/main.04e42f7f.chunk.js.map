{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Form/Label/Label.module.css","components/Form/Form.module.css","components/FilterInput/FilterInput.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","components/ContactsList/ContactsList.jsx","components/Form/Label/inputOptions.js","components/Form/Input/Input.jsx","components/Form/Label/Label.jsx","components/Form/Form.jsx","components/FilterInput/FilterInput.jsx","components/Phonebook/Phonebook.jsx","App.js","index.js"],"names":["module","exports","setFilter","createAction","getContactsRequest","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","initialStore","items","filter","reducerContacts","createReducer","actions","_","payload","store","newContact","item","id","loadingReducer","errorReducer","reducerFilter","rootReducer","combineReducers","loading","error","configureStore","reducer","contacts","getAllContacts","getFilter","axios","defaults","baseURL","getContacts","dispatch","a","get","data","addToContacts","contact","actionFunc","getStore","post","removeContact","delete","ContactsList","useDispatch","useState","newList","setNewList","useSelector","useEffect","result","name","toLowerCase","includes","number","length","listMarkup","map","className","styles","type","button","onClick","inputOptions","pattern","title","Input","content","callback","options","value","onChange","required","defaultProps","Label","label","htmlFor","input","Form","state","setState","handleChange","target","prevState","form","onSubmit","e","preventDefault","find","alert","formButton","FilterInput","Phonebook","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04e42f7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactsList_button__tS6fI\",\"item\":\"ContactsList_item__1LabN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Label_label__2uelZ\",\"input\":\"Label_input__1PbtE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2C5Z5\",\"formButton\":\"Form_formButton__ccxlo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"FilterInput_input__3MWtI\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nconst setFilter = createAction(\"contacts/filter\");\n\nconst getContactsRequest = createAction(\"contacts/getRequest\");\nconst getContactsSuccess = createAction(\"contacts/getSuccess\");\nconst getContactsError = createAction(\"contacts/getError\");\n\nconst addContactRequest = createAction(\"contacts/addRequest\");\nconst addContactSuccess = createAction(\"contacts/addSuccess\");\nconst addContactError = createAction(\"contacts/addError\");\n\nconst removeContactRequest = createAction(\"contacts/removeRequest\");\nconst removeContactSuccess = createAction(\"contacts/removeSuccess\");\nconst removeContactError = createAction(\"contacts/removeError\");\n\nexport default {\n  setFilter,\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n};\n","// import { nanoid } from \"nanoid\";\nimport { createReducer, combineReducers } from \"@reduxjs/toolkit\";\n// import { combineReducers } from \"redux\";\n\n// import { setFilter } from \"./contacts-actions\";\nimport actions from \"./contacts-actions\";\n\nconst initialStore = {\n  contacts: {\n    items: [\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  },\n};\n\n// const itemsReducer = createReducer([], {\n//   [actions.getBooksSuccess]: (_, { payload }) => payload,\n//   [actions.addBookSuccess]: (store, { payload }) => {\n//     store.push(payload);\n//   },\n//   [actions.removeBookSuccess]: (store, { payload }) => {\n//     const idx = store.findIndex(({ id }) => id === payload);\n//     store.splice(idx, 1);\n//   },\n// });\n\nexport const reducerContacts = createReducer(initialStore.contacts.items, {\n  [actions.getContactsSuccess]: (_, { payload }) => payload,\n  [actions.addContactSuccess]: (store, { payload }) => {\n    const newContact = { ...payload };\n    return [...store, newContact];\n  },\n  [actions.removeContactSuccess]: (store, { payload }) => {\n    const updateContacts = store.filter((item) => item.id !== payload);\n    return updateContacts;\n  },\n});\n\nconst loadingReducer = createReducer(false, {\n  [actions.getContactsRequest]: () => true,\n  [actions.getContactsSuccess]: () => false,\n  [actions.getContactsError]: () => false,\n  [actions.addContactRequest]: () => true,\n  [actions.addContactSuccess]: () => false,\n  [actions.addContactError]: () => false,\n  [actions.removeContactRequest]: () => true,\n  [actions.removeContactSuccess]: () => false,\n  [actions.removeContactError]: () => false,\n});\n\nconst errorReducer = createReducer(null, {\n  [actions.getContactsError]: (_, { payload }) => payload,\n  [actions.getContactsRequest]: () => null,\n  [actions.addContactError]: (_, { payload }) => payload,\n  [actions.addContactRequest]: () => null,\n  [actions.removeContactError]: (_, { payload }) => payload,\n  [actions.removeContactRequest]: () => null,\n});\n\nexport const reducerFilter = createReducer(initialStore.contacts.filter, {\n  [actions.setFilter]: (_, { payload }) => payload,\n});\n\nexport const rootReducer = combineReducers({\n  items: reducerContacts,\n  filter: reducerFilter,\n  loading: loadingReducer,\n  error: errorReducer,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport {\n  rootReducer,\n  reducerContacts,\n  reducerFilter,\n} from \"./contacts/contacts-reducer\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: rootReducer,\n  },\n});\n\nexport default store;\n","export const getAllContacts = (store) => store.contacts.items;\r\nexport const getFilter = (store) => store.contacts.filter;\r\n","import axios from \"axios\";\r\nimport actions from \"./contacts-actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4000/contacts\";\r\n\r\nexport const getContacts = () => async (dispatch) => {\r\n  dispatch(actions.getContactsRequest());\r\n  try {\r\n    const { data } = await axios.get(\"/\");\r\n    dispatch(actions.getContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(actions.getContactsError(error));\r\n  }\r\n};\r\n\r\n// export const getContacts = () => {\r\n//   const actionFunc = async (dispatch) => {\r\n//     dispatch(actions.getContactsRequest());\r\n\r\n//     try {\r\n//       const { data } = await axios.get(\"/\");\r\n//       dispatch(actions.getContactsSuccess(data));\r\n//     } catch (error) {\r\n//       dispatch(actions.getContactsError(error));\r\n//     }\r\n//   };\r\n\r\n//   return actionFunc;\r\n// };\r\n\r\nexport const addToContacts = (contact) => {\r\n  const actionFunc = async (dispatch, getStore) => {\r\n    // const { contacts } = getStore();\r\n    // const result = contacts.items.find((item) => item.title === data.title);\r\n    // if (result) {\r\n    // }\r\n\r\n    dispatch(actions.addContactRequest());\r\n    try {\r\n      const { data } = await axios.post(\"/\", contact);\r\n      dispatch(actions.addContactSuccess(data));\r\n    } catch (error) {\r\n      dispatch(actions.addContactError(error));\r\n    }\r\n  };\r\n\r\n  return actionFunc;\r\n};\r\n\r\nexport const removeContact = (id) => {\r\n  const actionFunc = async (dispatch) => {\r\n    dispatch(actions.removeContactRequest());\r\n    try {\r\n      const removeContact = await axios.delete(`/${id}`);\r\n      dispatch(actions.removeContactSuccess(id));\r\n    } catch (error) {\r\n      dispatch(actions.removeContactError(error));\r\n    }\r\n  };\r\n\r\n  return actionFunc;\r\n};\r\n\r\nexport default {\r\n  getContacts,\r\n  addToContacts,\r\n  removeContact,\r\n};\r\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport {\n  getAllContacts,\n  getFilter,\n} from \"../../redux/contacts/contacts-selectors\";\n\nimport {\n  getContacts,\n  removeContact,\n} from \"../../redux/contacts/contacts-operations\";\n\nimport styles from \"./ContactsList.module.css\";\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n  const [newList, setNewList] = useState([]);\n  const contacts = useSelector(getAllContacts);\n  const filter = useSelector(getFilter);\n\n  useEffect(() => {\n    const actionFunc = getContacts();\n    dispatch(actionFunc);\n  }, [dispatch]);\n\n  useEffect(() => {\n    const newList = contacts.filter((item) => {\n      const result = item.name.toLowerCase().includes(filter.toLowerCase());\n      if (result) {\n        return result;\n      } else {\n        return item.number.includes(filter);\n      }\n    });\n    setNewList(newList);\n  }, [contacts, filter]);\n\n  const onDelete = (id) => {\n    dispatch(removeContact(id));\n  };\n  if (newList.length !== 0) {\n    const listMarkup = newList.map((item) => {\n      const { name, number } = item;\n      return (\n        <li key={item.id} className={styles.item}>\n          {name}: {number}\n          <button\n            type=\"button\"\n            className={styles.button}\n            key={item.id}\n            id={item.id}\n            onClick={() => {\n              onDelete(item.id);\n            }}\n          >\n            Delete\n          </button>\n        </li>\n      );\n    });\n    return <ul>{listMarkup}</ul>;\n  } else {\n    return <p>Nothing found</p>;\n  }\n};\nexport default ContactsList;\n"," const inputOptions = {\n  name: {\n    type: \"text\",\n    name: \"name\",\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title: \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\n  },\n  number: {\n    type:\"tel\",\n    name: \"number\",\n    pattern:\"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n    title:\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\n    \n   },\n  filter: {\n    type:\"tel\",\n    name: \"filter\",\n  }\n}\nexport default inputOptions;","import PropTypes from \"prop-types\";\n\nconst Input = ({ content, callback, options, className }) => {\n  return (\n    <input\n      {...options}\n      value={content}\n      className={className}\n      onChange={callback}\n      required\n    />\n  );\n};\nInput.defaultProps = {\n  callback: () => {},\n  options: {},\n};\nInput.propTypes = {\n  content: PropTypes.string.isRequired,\n  callback: PropTypes.func,\n  options: PropTypes.object,\n  className: PropTypes.string.isRequired,\n};\nexport default Input;\n","import PropTypes from \"prop-types\";\n\nimport inputOptions from \"./inputOptions\";\nimport Input from \"../Input\";\n\nimport styles from \"./Label.module.css\";\n\nconst Label = ({ name, value, label, callback }) => {\n  return (\n    <label className={styles.label} htmlFor=\"\">\n      {label}\n      <Input\n        options={inputOptions[name]}\n        className={styles.input}\n        content={value}\n        callback={callback}\n      />\n    </label>\n  );\n};\nLabel.defaultProps = {\n  callback: () => {},\n};\nLabel.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  callback: PropTypes.func,\n};\nexport default Label;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { addToContacts } from \"../../redux/contacts/contacts-operations\";\n\nimport { useState } from \"react\";\nimport Label from \"./Label\";\nimport styles from \"./Form.module.css\";\n\nconst Form = () => {\n  const [state, setState] = useState({ name: \"\", number: \"\" });\n  const contacts = useSelector((store) => store.contacts.items);\n  const dispatch = useDispatch();\n\n  const addContact = (name, number) => {\n    const result = contacts.find((contact) => {\n      return contact.name === name || contact.number === number;\n    });\n    if (result) {\n      alert(\"Number is already in contacts\");\n      return;\n    }\n    dispatch(addToContacts({ name, number }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addContact(state.name, state.number);\n    setState({ name: \"\", number: \"\" });\n  };\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <Label\n        label=\"Name\"\n        name=\"name\"\n        value={state.name}\n        callback={handleChange}\n      />\n      <Label\n        label=\"Number\"\n        name=\"number\"\n        value={state.number}\n        callback={handleChange}\n      />\n      <button className={styles.formButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import actions from \"../../redux/contacts/contacts-actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\nimport styles from \"./FilterInput.module.css\";\n\nconst FilterInput = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const setFilterInput = ({ target }) => {\n    const input = target.value;\n    dispatch(actions.setFilter(input));\n  };\n  return (\n    <input value={filter} onChange={setFilterInput} className={styles.input} />\n  );\n};\nexport default FilterInput;\n","import ContactsList from \"../ContactsList\";\nimport Form from \"../Form\";\nimport FilterInput from \"../FilterInput\";\nconst Phonebook = () => {\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Form />\n      <h2>Contacts</h2>\n      <FilterInput />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default Phonebook;\n","import { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\nimport \"./App.css\";\nimport Phonebook from \"./components/Phonebook\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Phonebook />\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}